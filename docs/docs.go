// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account": {
            "post": {
                "tags": [
                    "Account/Login"
                ],
                "summary": "Create user account",
                "parameters": [
                    {
                        "description": "Params to create account",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterAccountResponse"
                        }
                    }
                }
            }
        },
        "/account/player": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Account/Login"
                ],
                "summary": "Get all players of a specific account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.ListPlayersResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Account/Login"
                ],
                "summary": "Create player",
                "parameters": [
                    {
                        "description": "Params to create player",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterPlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterPlayerResponse"
                        }
                    }
                }
            }
        },
        "/account/player/{player_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Account/Login"
                ],
                "summary": "Delete a player",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the player to delete",
                        "name": "player_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "Helpers"
                ],
                "summary": "Check if API is healthy and responding to requests",
                "responses": {
                    "200": {
                        "description": "Healthy!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Account/Login"
                ],
                "summary": "Login account",
                "parameters": [
                    {
                        "description": "Params to login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Healthy!",
                        "schema": {
                            "$ref": "#/definitions/requests.GenerateTokenResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Helpers"
                ],
                "summary": "Check if secured API auth is working",
                "responses": {
                    "200": {
                        "description": "pong!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.GenerateTokenRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.GenerateTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "requests.ListPlayerInfo": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outfit": {
                    "type": "string"
                },
                "sex": {
                    "type": "boolean"
                }
            }
        },
        "requests.ListPlayersResponse": {
            "type": "object",
            "properties": {
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.ListPlayerInfo"
                    }
                }
            }
        },
        "requests.RegisterAccountRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "integer",
                    "minimum": 100000
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterAccountResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterPlayerRequest": {
            "type": "object",
            "required": [
                "name",
                "outfit",
                "sex"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "outfit": {
                    "type": "string"
                },
                "sex": {
                    "type": "boolean"
                }
            }
        },
        "requests.RegisterPlayerResponse": {
            "type": "object",
            "required": [
                "name",
                "outfit",
                "sex"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outfit": {
                    "type": "string"
                },
                "sex": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "You can issue this token when you log in (route /api/login)",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7474",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Tibia backend for frontend",
	Description:      "This is a backend API created using Go(lang) to serve a otserver Tibia website",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
